<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Ryan Mitchell</title><link>https://rmitchell745.github.io/tags/python/</link><description>Recent content in Python on Ryan Mitchell</description><generator>Hugo</generator><language>en</language><managingEditor>youremail@domain.com (Ryan Mitchell)</managingEditor><webMaster>youremail@domain.com (Ryan Mitchell)</webMaster><lastBuildDate>Tue, 28 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://rmitchell745.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a Python Weather Notification App: Lessons in Automation, APIs, and DevOps</title><link>https://rmitchell745.github.io/post/weather_notification/</link><pubDate>Tue, 28 Oct 2025 00:00:00 +0000</pubDate><author>youremail@domain.com (Ryan Mitchell)</author><guid>https://rmitchell745.github.io/post/weather_notification/</guid><description>&lt;h1 id="building-a-python-weather-notification-app-lessons-in-automation-apis-and-devops"&gt;Building a Python Weather Notification App: Lessons in Automation, APIs, and DevOps&lt;/h1&gt;
&lt;h2 id="tldr"&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;I built a &lt;strong&gt;Python-based weather notification system&lt;/strong&gt; that pulls real-time forecasts from the &lt;strong&gt;OpenWeather API&lt;/strong&gt;, formats them for readability, and delivers them as &lt;strong&gt;MMS messages via Gmail SMTP&lt;/strong&gt;.&lt;br&gt;
The app runs automatically on the home server, scheduled with &lt;strong&gt;cron&lt;/strong&gt;, and logs all activity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stack:&lt;/strong&gt; Python, OpenWeather API, YAML, smtplib (SSL), cron, Fedora Server&lt;br&gt;
&lt;a href="https://github.com/rmitchell745/notification_app.git"&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;After setting up my homelab and blog, I wanted to build something practical that I could automate — something that combined Python, working with APIs, and easy to deploy as I move further into containerization and orchestration. The thought of a weather app and its next steps hit me while managing my morning routine and getting the kids ready for school, when my child asked, as they do everyday in the fall, is it going to be warmer or cold today? What type of jacket do I need to bring? I remembered back to when I was running all the time a simple app that I could plug in my current weather, the time of day, and the time I would run and it would give me an outfit recommendation. The current result is a lightweight notification app that texts me and my family the weather each morning before the commute.This app isn’t quite finished, I eventually want to add an outfit recommendation for the children, and include traffic projections and an ML model that can update the predictions based on the weather for the adults.&lt;/p&gt;</description></item></channel></rss>